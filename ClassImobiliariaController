public class ImobiliariaController {    
    //definições das variáveis
    
    public integer quartos {get; set;}
    public integer banheiros {get; set;}
    public integer sala {get; set;}
    public integer cozinha {get; set;}
    public integer copa {get; set;}
    public integer vagasDeGaragem {get; set;}
    public integer valor {get; set;}
    public String tipoImovel {get; set;}
    
    //Método picklist
    public List<SelectOption> getMinhasOpcoes(){
        
        //Mapear o campo de lista de seleção/picklist que desejo listar
        Schema.DescribeFieldResult describeResult = Imoveis__c.tipoImovel__c.getDescribe();
        
        //listar as opções válidas dentro do meu campo
        List<Schema.PicklistEntry> entries = describeresult.getPickListValues();
        
        //Cria variável de retorno do tipo lista para o objeto SelectOption
        List<SelectOption> optionsToReturn = new List<SelectOption>();
        
        
        //Adiciona as opções do campo listadas
        for(Schema.PicklistEntry pEntry : entries){
            
            //se a opção esta ativa
            //Ou pode aplicar o filtro que quiser, caso não queira mostrar todas as opções 
            if(pEntry.isActive()){
                //Adiciona o nome e o valor na variável retorno
                optionsToReturn.add(new SelectOption(pEntry.getValue(), pEntry.getLabel()));
                
            }
            
            
        }
        //Retorna a lista de selectOption que criamos na variável de retorno    
        return optionsToReturn;
        
    }  
    
    
    
    
    //Método salvar
    public void salvarImoveis(){
        
        Imoveis__c objImoveis = new Imoveis__c();
        objImoveis.Quarto__c = quartos;
        objImoveis.Banheiro__c = banheiros;
        objImoveis.Sala__c = sala;
        objImoveis.Cozinha__c = cozinha;
        objImoveis.Copa__c = copa;
        objImoveis.Garagem__c = vagasDeGaragem;
        objImoveis.Valor__c = valor;
        objImoveis.TipoImovel__c = tipoImovel;
        
        
        
        try{            
            if(objImoveis.TipoImovel__c != 'Nenhum' && objImoveis.TipoImovel__c != null) {
                
                ApexPages.addMessage(new ApexPages.message(ApexPages.Severity.CONFIRM, 'Imóvel cadastrado com sucesso'));                       
                
                insert objImoveis;
                
                //limpa os campos após SALVAR
                quartos = null;
                banheiros = null;
                sala = null;
                cozinha = null;
                copa = null;
                vagasDeGaragem = null;
                valor = null;
                tipoImovel = null;                 
                
            
                
            }else{
                ApexPages.addMessage(new ApexPages.message(ApexPages.Severity.ERROR, 'O campo Tipo do Imóvel deverá ser preenchido'));
            }
            
            
        }catch(DmlException e){
            ApexPages.addMessage(new ApexPages.message(ApexPages.Severity.ERROR, 'Por favor, verifique todos os campos antes de salvar'));
            
            
        }      
        
        
        
    }
    
    
}
